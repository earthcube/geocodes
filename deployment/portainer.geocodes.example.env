###############
# this is intended to be loaded into portainer as part of the geocodes stack
#   it is shorter than the full one
GC_BASE=example
###################################
# HOST
#  assuming you are using the top level mymydomain.org for some other service,
#   so defined as a subdomain
HOST=geocodes-dev.mydomain.org

###############
# production is defined so that if DNS is flipped to machine, nothing will need to be changed
###############
PRODUCTION=geocodes.mydomain.org

FACET_SERVICES_FILE=./config/services.js
# domains
GC_CLIENT_DOMAIN=geoccodes.geocodes-dev.mydomain.org

# Object store keys
MINIO_ROOT_ACCESS_KEY=worldsbestaccesskey
MINIO_ROOT_SECRET_KEY=worldsbestsecretkey
MINIO_SERVICE_ACCESS_KEY=worldsbestaccesskey
MINIO_SERVICE_SECRET_KEY=worldsbestsecretkey

# SPARQL GUI
# will use GLEANER_GRAPH_DOMAIN as base
SPARQL_DEFAULT_SPARQL_ENDPOINT_PATH=/blazegraph/namespace/earthcube/sparql
## api
S3ADDRESS=oss.geocodes-dev.mydomain.org
S3KEY=worldsbestaccesskey
S3SECRET=worldsbestsecretkey
S3SSL=true
S3PORT=443
BUCKET = gleaner
BUCKETPATH = summoned
#// options for path: bucket, bucketpath, reponame, sha
PATHTEMPLATE={{bucketpath}}/{{reponame}}/{{sha}}.jsonld

#// options for tool: bucket, bucketpath, reponame, ref (aka ark, or maybe a sha in the future)
TOOLTEMPLATE={{bucketpath}}/{{reponame}}/{{ref}}.json
TOOLBUCKET = ecrr
TOOLPATH = summoned

# NB Proxy
## for a service key for the gist notebook proxy
# stored gists in each users account
GC_GITHUB_SECRET=OAUTH SECRET
GC_GITHUB_CLIENTID=OAUTH APP ID
GC_NB_AUTH_MODE=service
# a user api key.  All gists are stored in this users account
#GC_GITHUB_USER=USER
#GC_GITHUB_TOKEN=ghp_KEY
#GC_NB_AUTH_MODE=apikey


