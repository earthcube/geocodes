version: '3.5'

## this needs some startup containers with dependencies to add namspaces and s3 buckets to the service

# initial starting point was gleaner: https://github.com/gleanerio/gleaner/blob/master/deployment/gleaner-DS-traefik.yml

# ${GLEANER_ADMIN_DOMAIN}
# ${GLEANER_OSS_DOMAIN}
# ${GLEANER_GRAPH_DOMAIN}

# ${MINIO_ACCESS_KEY}
# ${MINIO_SECRET_KEY}
#
# ${GLEANER_TRAEFIK}
# ${GLEANER_OBJECTS}
# ${GLEANER_GRAPH}
volumes:
  minio:
    external: true
  graph:
    external: true
  logs:
    external: true
networks:
  traefik_proxy:
    external: true

services:
  ## traefik is now in the base-machine-compose.yaml
  ## this allows portainer to be proxied, and have an SSL certificate.

###############
# graphstore: blasegraph
###############
  graph:
    image: nawer/blazegraph
# vm not currently supported. run "sudo sysctl -w vm.swappiness=0"
#    sysctls:
#      - vm.swappiness=0
    ulimits:
      nproc: 20000
#      nofile:
#        soft: 20000
#        hard: 40000
    logging:
      options:
        max-size: "10m"
        max-file: "3"
# ports needed for setup. Do not expose to world
    ports:
      - 9999
    environment:
      JAVA_XMS: 8g
      JAVA_XMX: 24g
   # java_opts not used in nawer/blaszgraph
   #   JAVA_OPTS: -Xmx8g -Xms2g --XX:+UseG1GC
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.triplestore.entrypoints=http"
      - "traefik.http.routers.triplestore.rule=Host(`${GLEANER_GRAPH_DOMAIN}`)"
      - "traefik.http.middlewares.triplestore-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.triplestore.middlewares=triplestore-https-redirect"
      - "traefik.http.routers.triplestore-secure.entrypoints=https"
      - "traefik.http.routers.triplestore-secure.rule=Host(`${GLEANER_GRAPH_DOMAIN}`)"
      - "traefik.http.routers.triplestore-secure.tls=true"
      - "traefik.http.routers.triplestore-secure.tls.certresolver=httpresolver"
      - "traefik.http.routers.triplestore-secure.service=triplestore"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolmaxage=200"
      - "traefik.http.middlewares.triplestore-secure.headers.addvaryheader=true"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolallowheaders=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.middlewares.triplestore-secure.headers.customresponseheaders.Access-Control-Allow-Headers=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.routers.triplestore-secure.middlewares=triplestore-secure@docker"
      - "traefik.http.services.triplestore.loadbalancer.server.port=9999"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - graph:/var/lib/blazegraph
    healthcheck:
      test: wget --no-verbose --tries=1 --spider -T 35 "http://localhost:9999/blazegraph/#status" || exit 1
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 10s
    networks:
      - traefik_proxy
#########
# s3 system, minio
#########
  s3system:
    image: quay.io/minio/minio
    ports:
      - 9000
      - 9001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s3system.entrypoints=http"
      - "traefik.http.routers.s3system.rule=Host(`${GLEANER_OSS_DOMAIN}`)"
      - "traefik.http.middlewares.s3system-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.s3system.middlewares=s3system-https-redirect"
      - "traefik.http.routers.s3system-secure.entrypoints=https"
      - "traefik.http.routers.s3system-secure.rule=Host(`${GLEANER_OSS_DOMAIN}`)"
      - "traefik.http.routers.s3system-secure.tls=true"
      - "traefik.http.routers.s3system-secure.tls.certresolver=httpresolver"
      - "traefik.http.routers.s3system-secure.service=s3system"
      - "traefik.http.routers.s3system.service=s3system"
      - "traefik.http.services.s3system.loadbalancer.server.port=9000"
      - "traefik.http.routers.s3admin.entrypoints=http"
      - "traefik.http.routers.s3admin.rule=Host(`${GLEANER_OSS_CONSOLE_DOMAIN}`)"
      - "traefik.http.middlewares.s3admin-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.s3admin.middlewares=s3admin-https-redirect"
      - "traefik.http.routers.s3admin-secure.entrypoints=https"
      - "traefik.http.routers.s3admin-secure.rule=Host(`${GLEANER_OSS_CONSOLE_DOMAIN}`)"
      - "traefik.http.routers.s3admin-secure.tls=true"
      - "traefik.http.routers.s3admin-secure.tls.certresolver=httpresolver"
      - "traefik.http.routers.s3admin-secure.service=s3admin"
      - "traefik.http.routers.s3admin.service=s3admin"
      - "traefik.http.services.s3admin.loadbalancer.server.port=9001"
      - "traefik.http.middlewares.s3system-secure.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.s3system-secure.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.s3system-secure.headers.accesscontrolmaxage=200"
      - "traefik.http.middlewares.s3system-secure.headers.addvaryheader=true"
      - "traefik.http.middlewares.s3system-secure.headers.accesscontrolallowcredentials=true"
      #      - "traefik.http.middlewares.s3system-secure.headers.accesscontrolallowheaders=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.middlewares.s3system-secure.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.s3system-secure.headers.customresponseheaders.Access-Control-Allow-Headers=*"
      #      - "traefik.http.middlewares.s3system-secure.headers.customresponseheaders.Access-Control-Allow-Headers=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.routers.s3system-secure.middlewares=s3system-secure@docker"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - minio:/data
    environment:
      -  MINIO_ROOT_USER=${MINIO_ROOT_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_SECRET_KEY}
    networks:
      - traefik_proxy
#    command: ["server", "/data"]
    command: server /data --address ":9000" --console-address ":9001"


### #####
# UI for graphstore
#######
  sparqlgui:
    image: erikap/yasgui
    restart: unless-stopped
    environment:
      DEFAULT_SPARQL_ENDPOINT: "https://`${GLEANER_GRAPH_DOMAIN}/${SPARQL_DEFAULT_SPARQL_ENDPOINT_PATH}`"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sparqlgui.entrypoints=http"
      - "traefik.http.routers.sparqlgui.priority=92"
      - "traefik.http.routers.sparqlgui.rule=Host(`${GLEANER_SPARQLGUI_DOMAIN}` )  "
      - "traefik.http.routers.sparqlgui.service=sparqlgui"
      - "traefik.http.middlewares.sparqlgui-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sparqlgui.middlewares=sparqlgui-https-redirect"
      - "traefik.http.routers.sparqlgui-secure.priority=94"
      - "traefik.http.routers.sparqlgui-secure.entrypoints=https"
      - "traefik.http.routers.sparqlgui-secure.rule=Host(`${GLEANER_SPARQLGUI_DOMAIN}`) "
      - "traefik.http.routers.sparqlgui-secure.tls=true"
      - "traefik.http.routers.sparqlgui-secure.tls.certresolver=httpresolver"
      - "traefik.http.routers.sparqlgui-secure.service=sparqlgui"
      - "traefik.http.services.sparqlgui.loadbalancer.server.port=80"
      - "traefik.http.middlewares.sparqlgui.headers.accesscontrolallowmethods=GET,OPTIONS,POST"
      - "traefik.http.middlewares.sparqlgui.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.sparqlgui.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.sparqlgui.headers.addvaryheader=true"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy

